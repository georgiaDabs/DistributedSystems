#BlueJ class context
comment0.params=count\ movieId\ userId\ rating
comment0.target=java.lang.String\ addReview(int,\ int,\ int,\ double)
comment1.params=movieId\ userId\ rating
comment1.target=java.lang.String\ implementAdd(int,\ int,\ double)
comment10.params=movieName
comment10.target=int\ getId(java.lang.String)
comment11.params=name
comment11.target=Movie\ getMovie(java.lang.String)
comment12.params=
comment12.target=State\ getState()
comment13.params=i
comment13.target=Movie\ getMovie(int)
comment14.params=movieName
comment14.target=double\ getRating(java.lang.String)
comment15.params=
comment15.target=void\ initiateMovies()
comment16.params=name\ overLoadProb\ offlineProb
comment16.target=Server(java.lang.String,\ double,\ double)
comment17.params=i
comment17.target=Message\ getMessage(int)
comment18.params=
comment18.target=void\ startCount()
comment19.params=
comment19.target=java.util.LinkedHashSet\ getQueueNumbers()
comment2.params=
comment2.target=java.lang.String\ getName()
comment20.params=i
comment20.target=boolean\ gotMessage(int)
comment21.params=i\ m
comment21.target=Result\ sendMessage(int,\ Message)
comment22.params=
comment22.target=void\ update()
comment23.params=
comment23.target=void\ ping()
comment24.params=i
comment24.target=boolean\ isUpToDate(int)
comment25.params=
comment25.target=int\ getCorrectdness()
comment26.params=otherServer
comment26.target=Result\ gossipWith(ServerInterface)
comment27.params=
comment27.target=void\ initiateRatings()
comment28.params=s
comment28.target=void\ changeState(State)
comment28.text=public\ Result\ sendRating(String\ movieName,int\ userId,\ Double\ rating){\r\n\ \ \ \ \ \ \ \ for(Movie\ m\:movies.values()){\r\n\ \ \ \ \ \ \ \ \ \ \ \ if(m.getName().contains(movieName)){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ m.addRating(userId,\ rating);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ Result.SUCCESFUL;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ Result.FAILED;\r\n}
comment29.params=
comment29.target=State\ changeStateRandomly()
comment3.params=movieId\ movieName
comment3.target=void\ implementAddMovie(int,\ java.lang.String)
comment30.params=args
comment30.target=void\ main(java.lang.String[])
comment4.params=count\ movieName\ movieId
comment4.target=Result\ addMovie(int,\ java.lang.String,\ int)
comment5.params=
comment5.target=int\ getNextId()
comment6.params=count\ movieId\ userId\ newRating
comment6.target=java.lang.String\ updateMovie(int,\ int,\ int,\ double)
comment7.params=movieId\ userId\ newRating
comment7.target=java.lang.String\ implementUpdate(int,\ int,\ double)
comment8.params=count\ movieId\ userId
comment8.target=Result\ deleteReview(int,\ int,\ int)
comment9.params=movieId\ userId
comment9.target=Result\ implementDelete(int,\ int)
numComments=31
